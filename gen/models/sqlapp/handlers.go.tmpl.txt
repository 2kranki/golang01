// vi:nu:et:sts=4 ts=4 sw=4
// See License.txt in main repository directory

//  Handle HTTP Events

// Generated: [[Time]]


package hndlr[[.TD.Data.TitledName]]

import (
	[[ if eq .TD.Data.SqlType "mariadb" ]]
		ERROR - NOT IMPLEMENTED
	[[ else if eq .TD.Data.SqlType "mssql" ]]
	_ "github.com/2kranki/go-mssqldb"
	[[ else if eq .TD.Data.SqlType "mysql" ]]
		_ "github.com/go-sql-driver/mysql"
	[[ else if eq .TD.Data.SqlType "postgres" ]]
		_ "github.com/lib/pq"
	[[ else if eq .TD.Data.SqlType "sqlite" ]]
	_ "github.com/2kranki/go-sqlite3"
	[[ end ]]
    "html/template"
    //"../io[[.TD.Data.TitledName]]"
)

var tmplsDir        string
var Tmpls           *template.Template

func Title(i interface{}) string {
    return "Title() - NOT Implemented"
}

func Body(i interface{}) string {
    return "Body() - NOT Implemented"
}

func init() {
    tmplsDir = "./"
}

func SetTmplsDir(d string) {
    tmplsDir = d
}

// SetupTmpls initializes the functions used in the templates
// and loads them.
func SetupTmpls() {
    funcs := map[string]interface{}{"Title":Title, "Body":Body,}
    path := tmplsDir + "tmpl/*.tmpl"
	Tmpls = template.Must(template.New("tmpls").Funcs(funcs).ParseGlob(path))
}

